@model KC.Models.ViewModels.Browsing.DetailsVM

@{
    ViewData["Title"] = Model.Product.DisplayName;
}

<div class="container my-5 card bg-light border border-success border-1 p-5">
    <form method="post" asp-action="Details">
        <input asp-for="@Model.Product.productId" hidden />
        <div class="pb-0 ps-0 ps-lg-4 pt-1 pt-lg-3 mb-0">
            <a class="btn link-success" onclick="goBack()"><i class="fa fa-angle-left"></i> Back</a>
        </div>

        <div class="row">
            <div class="col-12 col-lg-4">
                <div class="d-flex justify-content-center align-items-start">
                    <img class="pt-5 pb-2" src="@Model.Product.FurtherDetails.ImageUrl" style="width:80%;border-radius:3px" />
                </div>
                <p class="text-green-700 text-center fw-lighter"><span class="fw-light">SKU: </span>@Model.Product.ProdInfoPairs["SKU"]</p>
            </div>
            <div class="col-12 col-lg-5">
                <h2 class="text-dark pt-3 pb-1 fs-2">@Model.Product.DisplayName</h2>
                <hr />
                <p class="text-info">@Model.Product.FurtherDetails.Description?.ToString()</p>
                @foreach (var pair in Model.Product.ProdInfoPairs)
                {
                    @if (pair.Key != "SKU")
                    {
                        <p class="text-green-700"><span class="fw-bold">@pair.Key: </span>@pair.Value</p>
                    }
                }
                <hr />
                @if (Model.Product.HasGeneralDisclaimer)
                {
                    <p class="text-secondary fw-light">
                        @Model.Product.GeneralDisclaimer
                    </p>
                }

            </div>

            <div class="col-12 col-lg-3">
                <p class="text-center pt-0 pt-lg-5">
                    <span class="text-dark fs-2 fw-bold">@Model.Product.FurtherDetails.DisplayPrice</span>
                    <span class="text-secondary fs-4">@(Model.Product.FurtherDetails.UnitPrice == null ? string.Empty : $"({Model.Product.FurtherDetails.UnitPrice} {Model.Product.FurtherDetails.UnitPriceDeclaration}")</span>
                </p>
                <hr />
                <div class="row justify-content-center">
                    <div class="col-6 align-self-center">
                        <div class="input-group">
                            <button type="button" class="btn btn-outline-success btn-number" data-type="minus" data-field="QuantityInCart">
                                <i class="btn-default fa fa-minus"></i>
                            </button>
                            <input asp-for="QuantityInCart"
                                   type="text"
                                   class="form-control input-number text-center fs-5"
                                   min="0" max="100"
                                   name="QuantityInCart" />
                            <button type="button" class="btn btn-outline-success btn-number" data-type="plus" data-field="QuantityInCart">
                                <i class="btn-default fa fa-plus"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <div class="d-flex">
                    @if (!Model.IsInCart)
                    {
                        <button type="submit" formmethod="post" class="btn btn-success flex-fill mt-3">Add to Basket</button>
                    }
                    else
                    {
                        <button type="submit" formmethod="post" class="btn btn-lightgreen border flex-fill mt-3">Update Basket</button>
                    }
                </div>
                <hr />
                <div>
                    <p class="fw-light text-info">Nutritional information for the product can go here. Unfortunately, the data feed we have does not contain nutritional information about any products.</p>
                </div>

            </div>
        </div>
        <div class="row">
            <hr />
            <h5 class="mt-2 ms-3">People who viewed this item also viewed...</h5>
            <div class="d-lg-none d-flex justify-content-around ">
                @foreach (Product product in Model.ProductsOffers.GetRange(0, 2))
                {
                    <partial name="_ProductCardOfferExSmall" model="product" />
                }
            </div>
            <div class="d-none d-lg-block ">
                <div class="d-flex justify-content-around">
                    @foreach (Product product in Model.ProductsOffers)
                    {
                        <partial name="_ProductCardOfferExSmall" model="product" />
                    }
                </div>
                
            </div>
        </div>
    </form>
</div>

@section Scripts{
    <script>function goBack() {
            window.history.back();
        }

        $('.btn-number').click(function (e) {
            e.preventDefault();

            fieldName = $(this).attr('data-field');
            type = $(this).attr('data-type');
            var input = $("input[name='" + fieldName + "']");
            var currentVal = parseInt(input.val());
            if (!isNaN(currentVal)) {
                if (type == 'minus') {

                    if (currentVal > input.attr('min')) {
                        input.val(currentVal - 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('min')) {
                        $(this).attr('disabled', true);
                    }

                } else if (type == 'plus') {

                    if (currentVal < input.attr('max')) {
                        input.val(currentVal + 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('max')) {
                        $(this).attr('disabled', true);
                    }

                }
            } else {
                input.val(0);
            }
        });
        $('.input-number').focusin(function () {
            $(this).data('oldValue', $(this).val());
        });
        $('.input-number').change(function () {

            minValue = parseInt($(this).attr('min'));
            maxValue = parseInt($(this).attr('max'));
            valueCurrent = parseInt($(this).val());

            name = $(this).attr('name');
            if (valueCurrent >= minValue) {
                $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the minimum value was reached');
                $(this).val($(this).data('oldValue'));
            }
            if (valueCurrent <= maxValue) {
                $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the maximum value was reached');
                $(this).val($(this).data('oldValue'));
            }


        });
        $(".input-number").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });</script>
} 